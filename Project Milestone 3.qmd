---
title: "Project Milestone 3"
format: pdf
editor: visual
---

## Group 1- Project Milestone #3

#### **For Scenario 1: Infectious disease outbreak (simulated) in California**

-   Population dataset

    -   Summarize to include only one row per strata of interest

    For all scenarios, please turn in an html document created from an Rmd or Qmd with the following components:

-   One or more tables with descriptive statistics for 4 data elements - for characters - cross tab of counts, numeric - central tendency and range

-   Html output that is professionally prepared for presentation Only the necessary information is outputted (you should suppress, for example, entire data frame outputs) Use of headers and sub headers to create an organized document

```{r, include = F}
library (dplyr)
library (tidyverse)
library (snakecase)
install.packages ("MMWRweek")
library(MMWRweek)# Create MMWR week strings
library (kableExtra)
```

## Data Dictionary

```{r}
#Create Data Dictionary with Variable Name, Data Type, Description

Dictionary <- data.frame(
  Variable_Name = c("county", "race_eth", "total_infections", "total_unrecovered", "total_severe", "pop"),
  Data_Type = c("Character", "Character", "Integer", "Integer", "Integer", "Integer"),
  Description = c(
    "California county of residence of novel infectious respiratory ID cases",
    "Race-Ethnicity categorization as defined by California Department of Finance",
    "Cumulative number of diagnosed individuals from May 28th-Dec 30th, 2023, per race category",
    "Cumulative number of individuals reported as unrecovered after a week of being diagnosed from May 28th-Dec 30th, 2023, per race category",
    "Cumulative number of identified individuals having severe disease requiring hospitalization from May 28th-Dec 30th, 2023, per race category",
    "Population of each California county, per race category"
  )
)

#Create a table using KableExtra
Dictionary %>%
  kable("html", col.names = c("Variable Name", "Data Type", "Description")) %>%
  kable_styling(full_width = FALSE, bootstrap_options = c("striped", "hover", "condensed", "responsive"))

```

## Import Datasets

```{r}
#import DataSet#1 from GitHub (sim_novelid_CA.csv)
CA_data <- read.csv("https://raw.githubusercontent.com/PHW290/phw251_projectdata/refs/heads/main/scenario_1/sim_novelid_CA.csv") %>%
  rename_with(~ tolower(gsub(" ","_",.x,fixed=TRUE))) 

#Dataset two (sim_novelid_LACounty.csv)

LACounty_data <- read.csv("https://raw.githubusercontent.com/PHW290/phw251_projectdata/refs/heads/main/scenario_1/sim_novelid_LACounty.csv") %>%
  rename_with(~ tolower(gsub(" ","_",.x,fixed=TRUE))) 

#Import Dataset three (population dataset)
DS3 <- read.csv("https://raw.githubusercontent.com/PHW290/phw251_projectdata/refs/heads/main/scenario_1/ca_pop_2023.csv") %>%
  rename_with(~ tolower(gsub(" ","_",.x,fixed=TRUE))) 
```

## Morbidity Datasets

### 1) Recode Column Names

```{r}
str (CA_data)
```

```{r}
str(LACounty_data)
unique (LACounty_data$race_eth)
```

```{r}
#Rename columns to new column names, add date column in date format
CA_data_clean <-  CA_data %>%
  rename (race_eth = race_ethnicity) %>%
  rename (infections_new = new_infections) %>%
  rename (infected_cum = cumulative_infected) %>%
  rename (unrecovered_new = new_unrecovered)%>%
  rename (unrecovered_cum = cumulative_unrecovered) %>%
  rename (severe_new = new_severe) %>%
  rename (severe_cum = cumulative_severe) %>%
   mutate(
    year = as.numeric(substr(time_int, 1, 4)),  # Extract the year
    mmwr_week = as.numeric(substr(time_int, 5, 6)),  # Extract the week
    date = MMWRweek2Date(MMWRyear = year, MMWRweek = mmwr_week)  # Convert to date
  ) %>%
  select (-dt_diagnosis, -year, -mmwr_week, -time_int)

#Remove word "county" in the county column
CA_data_clean <- CA_data_clean %>%
  mutate(county = gsub("\\County\\b", "", county))

#Recode race_eth column to convert numbers to descriptions same as LACounty data
CA_data_clean <- CA_data_clean %>%
  mutate(
    race_eth = recode(
      race_eth,
      `1` = "White, Non-Hispanic",
      `2` = "Black, Non-Hispanic",
      `3` = "American Indian or Alaska Native, Non-Hispanic",
      `4` = "Asian, Non-Hispanic",
      `5` = "Native Hawaiian or Pacific Islander, Non-Hispanic",
      `6` = "Multiracial (two or more of above races), Non-Hispanic",
      `7` = "Hispanic (any race)",
      `9` = "Unknown"
    )
  )
head(CA_data_clean)
str(CA_data_clean)
unique(CA_data_clean$race_eth)
```

```{r}
#LA Dataset cleaned

LA_data_clean <- LACounty_data %>%
  mutate(county = "Los Angeles") %>%
  rename(age_cat = age_category,
         date =  dt_dx,
         infections_new = dx_new,
         infected_cum = infected_cumulative,
         unrecovered_cum = unrecovered_cumulative,
         severe_cum = severe_cumulative) %>%
  mutate(date = as.Date(date, format = "%d%b%Y")) %>%
  select(county, age_cat, sex, race_eth, infections_new, infected_cum, 
         unrecovered_new, unrecovered_cum, severe_new, severe_cum, date)

head(LA_data_clean)
str(LA_data_clean)
```

### 2) Join Morbidity Datasets & Aggregate by Race

```{r}
#Join CA_data_clean with LA_data_clean

Counties_join <- full_join (CA_data_clean, LA_data_clean) %>%
  arrange (county)

#Aggregate by Race/Ethnicity
Counties_race <- Counties_join %>%
  group_by(county, race_eth) %>%
  summarize (total_infections = sum(infections_new),
             total_unrecovered = sum (unrecovered_new),
             total_severe = sum (severe_new)) %>%
  ungroup()

head (Counties_race)

```

## Population Dataset

### 1) Rename racial ethnic groups

```{r}
DS3 <- DS3 %>% mutate(race7 = recode(race7, `WhiteTE NH` = "White, Non-Hispanic", `Black NH` = "Black, Non-Hispanic", `AIAN NH` = "American Indian or Alaska Native, Non-Hispanic", `Asian NH` = "Asian, Non-Hispanic", `NHPI NH` = "Native Hawaiian or Pacific Islander, Non-Hispanic", `MR NH` = "Multiracial (two or more of above races), Non-Hispanic", `Hispanic` = "Hispanic (any race)" ))

#rename race column to match
DS3 <- rename(DS3, race_eth = race7)
```

### 2) Recategorize ages

```{r}
DS3 <- DS3 %>% mutate(age_cat = recode(age_cat, "0-4" = "0-17", "5-11" = "0-17", "12-17" = "0-17"))

#Remove unused columns
DS3_clean <- DS3 %>%
  select(-health_officer_region)

str(DS3_clean)
```

### 3) Aggregate by Race/Ethnicity

  aggregate_table <- DS3_clean %>% 
  group_by(race_eth) %>% 
  summarize(aggregate = sum(pop)
